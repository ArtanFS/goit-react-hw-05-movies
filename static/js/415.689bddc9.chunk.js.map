{"version":3,"file":"static/js/415.689bddc9.chunk.js","mappings":"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","sources":["components/Error/Error.styled.js","components/Error/index.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/index.jsx","pages/Home.jsx","services/API.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 15px;\n`;\n\nexport const Text = styled.p`\n  font-size: 18px;\n`;\n","import { Text, Wrapper } from './Error.styled';\n\nconst Error = ({ err }) => {\n  return (\n    <Wrapper>\n      <Text>An error occurred: {err}</Text>\n    </Wrapper>\n  );\n};\n\nexport default Error;\n","import styled from 'styled-components';\n\nexport const MoviesListWrap = styled.div`\n  padding: 15px;\n`;\n\nexport const MoviesItems = styled.ul`\n  display: inline-flex;\n  flex-direction: column;\n  gap: 6px;\n`;\n\nexport const MoviesItem = styled.li`\n  font-size: 18px;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    color: #0f51b5;\n    text-decoration: underline;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { MoviesItem, MoviesItems, MoviesListWrap } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <MoviesListWrap>\n      <MoviesItems>\n        {movies.map(movie => (\n          <MoviesItem key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </MoviesItem>\n        ))}\n      </MoviesItems>\n    </MoviesListWrap>\n  );\n};\n\nexport default MoviesList;\n","import { useEffect, useState } from 'react';\nimport { getMovies } from 'services/API';\nimport Loader from '../components/Loader';\nimport MoviesList from '../components/MoviesList';\nimport Error from '../components/Error';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const isMovies = Boolean(movies.length);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getMovies();\n        setMovies([...data]);\n        setError('');\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  return (\n    <main>\n      {isLoading && <Loader />}\n      {isMovies && <MoviesList movies={movies} />}\n      {error && <Error err={error} />}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkMjRjNmI5NWRhNmE1NWI2MmI3YmQyY2NlMDBkZThjNCIsInN1YiI6IjY1NjRmN2Y0ZWRlYjQzMDBlM2Y4ZjA0YSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Se99AElRac5dEFldAVBXHVj2Yn2Yvx3cf4i09wyudJc';\n\nexport async function getMovies() {\n  const { data } = await axios('trending/movie/day');\n  return data.results;\n}\n\nexport async function getMoviesById(id) {\n  const { data } = await axios(`movie/${id}`);\n  return data;\n}\n\nexport async function getMoviesByQuery(query) {\n  let params = {\n    query,\n  };\n  const { data } = await axios('search/movie', { params });\n  return data.results;\n}\n\nexport async function getMoviesReviews(id) {\n  const { data } = await axios(`movie/${id}/reviews`);\n  return data.results;\n}\n\nexport async function getMoviesCast(id) {\n  const { data } = await axios(`movie/${id}/credits`);\n  return data.cast;\n}\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Text","_templateObject2","_ref","err","_jsx","children","_jsxs","MoviesListWrap","MoviesItems","MoviesItem","_templateObject3","movies","location","useLocation","map","movie","Link","to","concat","id","state","from","title","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","isMovies","Boolean","length","useEffect","fetchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getMovies","sent","_toConsumableArray","t0","message","finish","stop","apply","arguments","Loader","MoviesList","Error","_getMovies","_yield$axios","axios","abrupt","results","getMoviesById","_x","_getMoviesById","_callee2","_yield$axios2","_context2","getMoviesByQuery","_x2","_getMoviesByQuery","_callee3","query","params","_yield$axios3","_context3","getMoviesReviews","_x3","_getMoviesReviews","_callee4","_yield$axios4","_context4","getMoviesCast","_x4","_getMoviesCast","_callee5","_yield$axios5","_context5","cast"],"sourceRoot":""}